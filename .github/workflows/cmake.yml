name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        qtversion: ['6.0.0']
        ssl: ['ON', 'OFF']
        websockets: ['OFF']
        test: ['ON']

    steps:
    - uses: actions/checkout@v2
      with:
        repository: google/googletest.git
        ref: release-1.10.0
        path: gtest

    - name: Create GTest Build Environment
      run: cmake -E make_directory ${{github.workspace}}/gtest/build

    - name: Configure GTest CMake
      shell: bash
      working-directory: ${{github.workspace}}/gtest/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12

      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/dist

    - name: Build GTest
      shell: bash
      working-directory: ${{github.workspace}}/gtest/build
      run: cmake --build . --config $BUILD_TYPE --target install

    - uses: actions/checkout@v2
      with:
        path: qmqtt

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{matrix.qtversion}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/qmqtt/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/qmqtt/build
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_PREFIX_PATH=${{github.workspace}}/dist -DQMQTT_SUPPORT_SSL=${{matrix.ssl}} -DQMQTT_SUPPORT_WEBSOCKETS=${{matrix.websockets}} -DBUILD_TESTING=${{matrix.test}} -DQMQTT_BUILD_EXAMPLE=ON

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/qmqtt/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      if: ${{ matrix.test }} == 'ON'
      shell: bash
      working-directory: ${{github.workspace}}/qmqtt/build
      run: ctest -C $BUILD_TYPE --verbose
